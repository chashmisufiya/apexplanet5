document.addEventListener("DOMContentLoaded", function() {
  const productList = document.getElementById("product-list");
  const cartCount = document.getElementById("cart-count");
  const wishlistCount = document.getElementById("wishlist-count");

  let cart = JSON.parse(localStorage.getItem("cart")) || [];
  let wishlist = JSON.parse(localStorage.getItem("wishlist")) || [];

  // Update counts
  function updateCounts() {
    cartCount && (cartCount.textContent = cart.length);
    wishlistCount && (wishlistCount.textContent = wishlist.length);
  }
  // Save cart and wishlist to localStorage
  function saveData() {
    localStorage.setItem("cart", JSON.stringify(cart));
    localStorage.setItem("wishlist", JSON.stringify(wishlist));
    updateCounts();
  }
  // Add to Cart
  window.addToCart = function(id, name, price, image) {
    cart.push({ id, name, price, image });
    saveData();
    alert(`${name} added to Cart!`);
  };

  // Add to Wishlist
  window.addToWishlist = function(id, name, price, image) {
    wishlist.push({ id, name, price, image });
    saveData();
    alert(`${name} added to Wishlist!`);
  };

  // Render products
  function renderProducts(products) {
    productList.innerHTML = "";
    products.forEach(product => {
      const card = document.createElement("div");
      card.className = "product-card";
      card.innerHTML = `
        <img src="${product.image}" alt="${product.name}" loading="lazy" 
             onerror="this.onerror=null;this.src='https://picsum.photos/300/300?random=${product.id}'">
        <h3>${product.name}</h3>
        <p class="category">${product.category}</p>
        <p class="price">$${product.price}</p>
        <button onclick="addToCart(${product.id}, '${product.name}', ${product.price}, '${product.image}')">Add to Cart</button>
        <button onclick="addToWishlist(${product.id}, '${product.name}', ${product.price}, '${product.image}')">❤️ Wishlist</button>
        <button class="checkout" onclick="location.href='checkout.html'">Checkout</button>
      `;
      productList.appendChild(card);
    });
  }

  // Load products from JSON
  fetch("products.json")
    .then(res => res.json())
    .then(products => {
      // Ensure unique IDs if missing
      products = products.map((p, index) => ({ id: index + 1, ...p }));
      renderProducts(products);

      // Fill category filter
      const categories = [...new Set(products.map(p => p.category))];
      const categoryFilter = document.getElementById("categoryFilter");
      categories.forEach(cat => {
        const opt = document.createElement("option");
        opt.value = cat;
        opt.textContent = cat;
        categoryFilter.appendChild(opt);
      });

      // Filter and sort
      document.getElementById("categoryFilter").addEventListener("change", applyFilters);
      document.getElementById("priceSort").addEventListener("change", applyFilters);

      function applyFilters() {
        let filtered = [...products];
        const cat = categoryFilter.value;
        const priceSort = document.getElementById("priceSort").value;

        if (cat !== "all") filtered = filtered.filter(p => p.category === cat);

        if (priceSort === "low-high") filtered.sort((a, b) => a.price - b.price);
        else if (priceSort === "high-low") filtered.sort((a, b) => b.price - a.price);

        renderProducts(filtered);
      }
    })
    .catch(err => console.error("Error loading products:", err));

  updateCounts();
});
